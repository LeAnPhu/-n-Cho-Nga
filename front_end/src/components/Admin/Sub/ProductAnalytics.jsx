import React from "react";
import { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, Cell } from "recharts";
import styles from "../../../assets/style/components/AdminPage/productanalytics.module.css";

// Gi·∫£ l·∫≠p d·ªØ li·ªáu s·∫£n ph·∫©m
const generateProductData = (count, min, max) => {
  const categories = ["√Åo", "Gi√†y", "T√∫i", "ƒê·ªìng h·ªì", "Qu·∫ßn", "M≈©", "Balo"];
  return Array.from({ length: count }, (_, index) => ({
    name: `${categories[index % categories.length]} ${index + 1}`,
    s·ªë_l∆∞·ª£ng: Math.floor(Math.random() * (max - min + 1)) + min,
  }));
};

const productCount = 10; // T·ªïng s·ªë s·∫£n ph·∫©m
const dataProducts = generateProductData(productCount, 0, 20); // C√≥ th·ªÉ c√≥ s·∫£n ph·∫©m h·∫øt h√†ng

const ProductAnalytics = () => {
  // T√¨m s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t
  const bestSellingProduct = dataProducts.reduce((max, product) =>
    product.s·ªë_l∆∞·ª£ng > max.s·ªë_l∆∞·ª£ng ? product : max, dataProducts[0]);

  // L·ªçc s·∫£n ph·∫©m h·∫øt h√†ng
  const outOfStockProducts = dataProducts.filter(product => product.s·ªë_l∆∞·ª£ng === 0);

  // L·ªçc s·∫£n ph·∫©m c√≤n h√†ng nh∆∞ng t·ªìn kho cao (tr√™n 10 s·∫£n ph·∫©m)
  const inStockProducts = dataProducts.filter(product => product.s·ªë_l∆∞·ª£ng > 10);

  // Chu·∫©n b·ªã d·ªØ li·ªáu cho bi·ªÉu ƒë·ªì
  const chartData = [
    { name: "S·∫£n ph·∫©m b√°n ch·∫°y", S·ªë: bestSellingProduct.s·ªë_l∆∞·ª£ng, color: "#4CAF50" }, // Xanh l√°
    { name: "S·∫£n ph·∫©m h·∫øt h√†ng", S·ªë: outOfStockProducts.length, color: "#F44336" },  // ƒê·ªè
    { name: "S·∫£n ph·∫©m t·ªìn kho cao", S·ªë: inStockProducts.length, color: "#2196F3" },  // Xanh d∆∞∆°ng
  ];

  return (
    <div className={styles.productAnalytics}>
      <h2>üìä Th·ªëng k√™ S·∫£n ph·∫©m ({productCount}+ s·∫£n ph·∫©m)</h2>

      {/* Hi·ªÉn th·ªã th√¥ng tin ch√≠nh */}
      <div className={styles.productInfo}>
        <p>üî• <strong>S·∫£n ph·∫©m b√°n ch·∫°y:</strong> {bestSellingProduct.name} ({bestSellingProduct.s·ªë_l∆∞·ª£ng} s·∫£n ph·∫©m)</p>
        <p>üìâ <strong>S·∫£n ph·∫©m h·∫øt h√†ng:</strong> {outOfStockProducts.length} s·∫£n ph·∫©m</p>
      </div>

      {/* Danh s√°ch s·∫£n ph·∫©m h·∫øt h√†ng */}
      <div className={styles.productList}>
        <h4>üìâ S·∫£n ph·∫©m h·∫øt h√†ng ({outOfStockProducts.length})</h4>
        <ul>
          {outOfStockProducts.map(product => (
            <li key={product.name}>‚ö†Ô∏è {product.name}</li>
          ))}
        </ul>
      </div>

      {/* Danh s√°ch s·∫£n ph·∫©m t·ªìn kho cao */}
      <div className={styles.productList}>
        <h4>üì¶ S·∫£n ph·∫©m t·ªìn kho cao ({inStockProducts.length})</h4>
        <ul>
          {inStockProducts.map(product => (
            <li key={product.name}>‚úÖ {product.name} ({product.s·ªë_l∆∞·ª£ng} s·∫£n ph·∫©m)</li>
          ))}
        </ul>
      </div>

      {/* Bi·ªÉu ƒë·ªì th·ªëng k√™ */}
      <div className={styles.chartContainer}>
        <h3>üìà Bi·ªÉu ƒë·ªì Th·ªëng k√™</h3>
        <ResponsiveContainer width="100%" height={300}>
          <BarChart data={chartData} barSize={60}>
            <XAxis dataKey="name" />
            <YAxis />
            <Tooltip />
            <Legend />
            <Bar dataKey="S·ªë">
              {chartData.map((entry, index) => (
                <Cell key={`cell-${index}`} fill={entry.color} />
              ))}
            </Bar>
          </BarChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
};

export default ProductAnalytics;
